from fastapi import FastAPI, UploadFile, File
from fastapi.responses import FileResponse, JSONResponse
import os
import shutil
import subprocess

app = FastAPI()

UPLOAD_DIR = "/tmp/uploads"
OUTPUT_PATH = "/tmp/output_cut.mp4"

os.makedirs(UPLOAD_DIR, exist_ok=True)

@app.get("/")
def read_root():
    return {"status": "üöÄ Server is up and running"}

@app.post("/clean")
async def clean_video(file: UploadFile = File(...)):
    try:
        input_path = os.path.join(UPLOAD_DIR, file.filename)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with open(input_path, "wb") as f:
            shutil.copyfileobj(file.file, f)

        print("‚úÖ –§–∞–π–ª –ø–æ–ª—É—á–µ–Ω:", input_path)

        # –£–¥–∞–ª—è–µ–º –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –±—ã–ª
        if os.path.exists(OUTPUT_PATH):
            os.remove(OUTPUT_PATH)

        # –ó–∞–ø—É—Å–∫–∞–µ–º auto-editor
        result = subprocess.run(
            ["auto-editor", input_path, "--output_file", OUTPUT_PATH],
            capture_output=True,
            text=True
        )

        print("STDOUT:", result.stdout)
        print("STDERR:", result.stderr)

        if result.returncode != 0:
            raise Exception("Auto-editor failed")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞
        if not os.path.exists(OUTPUT_PATH):
            raise Exception("–§–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω")

        print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        return FileResponse(OUTPUT_PATH, media_type="video/mp4", filename="cleaned.mp4")

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞:", str(e))
        return JSONResponse(status_code=500, content={"detail": f"–û—à–∏–±–∫–∞: {str(e)}"})
